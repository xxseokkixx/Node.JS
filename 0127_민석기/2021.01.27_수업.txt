*2021.01.27

[변수와 타입]

* https://blog.naver.com/sylviuss/221191100988 -> 넷빈즈에서 리스트 선언

https://includestdio.tistory.com/1 자료형 wrapper 클래스 

https://it-mesung.tistory.com/67 자료형 wrapper 클래스 언박싱


<데이터타입>
힙 -> 객체가 생성되는 곳(GC:Garbage Collection, 메모리를 자동 관리)

사용하려고 올려놓았던 메모리(object, 객체) 의 주소값을 기억->


기본 타입 -> 실제 값을 변수 안에 저장(힙 or 스택 영역에 저장)

참조 타입 -> 주소를 통해 저장된 객체를 참조. (대문자로 선언됨, 힙영역에만 들어감)
대문자로 선언된 타입 = 객체
[대문자][] -> 배열=객체
-----------------------------------------------------------------------
#필수로 기억.
일반 자료형과 참조 자료형을 구분할 수 있다.
* 지역변수는 기본 변수, 참조변수가 올 수 있다.
-> 지역변수는 스택 영역에 포함

<일반 자료형>
int num1 = 100;(메모리 속 4바이트 공간에 100이란 값이 저장.)

<참조 자료형> - 앞에 대문자로 시작.(관용적으로 약속되어있음) - 힙영역에만 들어감
=클래스 식별자.(클래스는 생성되면 객체화가 될 수 있기 때문에 대문자로 작성)

String객체의 참조 주소
*String msg = "Hello"; (메모리에 실제 Hello란 객체가 생성되고 생성된 객체의 주소가
임의로 할당(0x100번지) 된 주소를 msg에서 기억
*즉, msg는 100번지를 가리키는 주소를 저장한 변수.
-> String은 자바에서 제공하는 클래스.(API도구)
[가르켜야하는 참조자료형][변수명] = 객체의 주소(생성자의 값)
Ex1 ref = aa;

// MyTest 라는 객체의 주소를 저장할 수 있는 참조 자료형 변수
// ref2 로 선언했다.
MyTest ref2;

-> 주소 없이 참조가 들어갈 수 있음.
(자바는 Garbage Collection이 메모리를 관리.- 주소값이 없는 애들을 소거(메모리 용량을 본 후))
---------------------------------------------------------------------------------------------------------

JRE(JVM, API 포함)

JVM - 자바를 해석하게 가능해주는 것
java란 명령어를 가지고 .class파일을 실행하면 JRE에 의해서 
관리되는 JVM메모리에서 main메서드를 호출 한다.

main() {
// A라는 객체를 참조하는 변수 ref.
A ref = new A(); -> main method안에 선언되었기 때문에 지역변수.
}

- Stack -> First In Last Out
메서드 호출, 지역변수가 선언 및 사용되는 공간.
가장 먼저 들어간 값이 나중에 나오는 구조. (FILO) = (LIFO)
(동작을 책임지는 공간.)

- Heap : new란 연산자에 의해서 클래스가 객체화 되고 주소가 할당되는 공간.
(객체로 생성되는 공간)

=> 이 영역을 관리하는 것이 Garbage Collection.(메모리)

- 메서드 영역 : 클래스 영역, 상수풀(static공간)

<연산자 == 과 .equals의 차이>
https://ojava.tistory.com/15 - 참조

----------------------------------------------------------------------
<복습>
heap 하면 생각나는 것?
-> 객체, 주소, Garbage Collection, new 연산자(명시적 객체 생성방법), 묵시적 객체 생성방법(" " 생성)
참조, null, JVM, 비교연산자(주소값)




1) 상수값이 같을 때 명시적 객체 생성과 묵시적 객체 생성의 차이가 무엇인지 설명 해봅시다.

2) String 클래스의 불변적 특징에 대해서 설명 해봅시다.(댓글)

https://ifuwanna.tistory.com/221 -> StringBuffer 와 StringBuilder의 차이



